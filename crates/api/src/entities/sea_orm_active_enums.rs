//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.6

use sea_orm::entity::prelude::*;

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "attestation_kind")]
pub enum AttestationKind {
    #[sea_orm(string_value = "DIFF_TEST")]
    DiffTest,
    #[sea_orm(string_value = "EXAM")]
    Exam,
    #[sea_orm(string_value = "TEST")]
    Test,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "qualification")]
pub enum Qualification {
    #[sea_orm(string_value = "bachelor")]
    Bachelor,
    #[sea_orm(string_value = "doctorate")]
    Doctorate,
    #[sea_orm(string_value = "master")]
    Master,
    #[sea_orm(string_value = "postgraduate")]
    Postgraduate,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "teacher_kind")]
pub enum TeacherKind {
    #[sea_orm(string_value = "assistant")]
    Assistant,
    #[sea_orm(string_value = "associate_professor")]
    AssociateProfessor,
    #[sea_orm(string_value = "professor")]
    Professor,
    #[sea_orm(string_value = "regular_teacher")]
    RegularTeacher,
    #[sea_orm(string_value = "senior_teacher")]
    SeniorTeacher,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "training_kind")]
pub enum TrainingKind {
    #[sea_orm(string_value = "CORRESPONDENCE")]
    Correspondence,
    #[sea_orm(string_value = "FULL_TIME")]
    FullTime,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "user_role")]
pub enum UserRole {
    #[sea_orm(string_value = "ADMIN")]
    Admin,
}
