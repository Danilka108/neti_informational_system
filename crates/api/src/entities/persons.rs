//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.6

use super::sea_orm_active_enums::UserRole;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "persons")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub email: String,
    pub role: UserRole,
    #[sea_orm(column_type = "Text")]
    pub hashed_password: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::person_sessions::Entity")]
    PersonSessions,
    #[sea_orm(has_one = "super::students::Entity")]
    Students,
    #[sea_orm(has_many = "super::students_attestations::Entity")]
    StudentsAttestations,
    #[sea_orm(has_many = "super::subdivision_members::Entity")]
    SubdivisionMembers,
    #[sea_orm(has_one = "super::teachers::Entity")]
    Teachers,
}

impl Related<super::person_sessions::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PersonSessions.def()
    }
}

impl Related<super::students::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Students.def()
    }
}

impl Related<super::students_attestations::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::StudentsAttestations.def()
    }
}

impl Related<super::subdivision_members::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SubdivisionMembers.def()
    }
}

impl Related<super::teachers::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Teachers.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
