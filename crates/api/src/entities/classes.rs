//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.6

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "classes")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub discipline_id: i32,
    pub kind: i32,
    #[sea_orm(column_type = "Double")]
    pub duration_in_hours: f64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::class_kinds::Entity",
        from = "Column::Kind",
        to = "super::class_kinds::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    ClassKinds,
    #[sea_orm(has_many = "super::classes_teachers::Entity")]
    ClassesTeachers,
    #[sea_orm(
        belongs_to = "super::disciplines::Entity",
        from = "Column::DisciplineId",
        to = "super::disciplines::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Disciplines,
}

impl Related<super::class_kinds::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ClassKinds.def()
    }
}

impl Related<super::classes_teachers::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ClassesTeachers.def()
    }
}

impl Related<super::disciplines::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Disciplines.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
