//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.6

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "subdivision_attributes")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub name: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::subdivisions_attributes::Entity")]
    SubdivisionsAttributes,
}

impl Related<super::subdivisions_attributes::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SubdivisionsAttributes.def()
    }
}

impl Related<super::subdivisions::Entity> for Entity {
    fn to() -> RelationDef {
        super::subdivisions_attributes::Relation::Subdivisions.def()
    }
    fn via() -> Option<RelationDef> {
        Some(
            super::subdivisions_attributes::Relation::SubdivisionAttributes
                .def()
                .rev(),
        )
    }
}

impl ActiveModelBehavior for ActiveModel {}
