//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.6

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "curriculums")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::disciplines::Entity")]
    Disciplines,
    #[sea_orm(has_many = "super::study_groups_curriculums::Entity")]
    StudyGroupsCurriculums,
}

impl Related<super::disciplines::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Disciplines.def()
    }
}

impl Related<super::study_groups_curriculums::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::StudyGroupsCurriculums.def()
    }
}

impl Related<super::study_groups::Entity> for Entity {
    fn to() -> RelationDef {
        super::study_groups_curriculums::Relation::StudyGroups.def()
    }
    fn via() -> Option<RelationDef> {
        Some(
            super::study_groups_curriculums::Relation::Curriculums
                .def()
                .rev(),
        )
    }
}

impl ActiveModelBehavior for ActiveModel {}
