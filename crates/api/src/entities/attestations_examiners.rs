//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.6

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "attestations_examiners")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub examiners_id: i32,
    #[sea_orm(primary_key)]
    pub attestation_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::attestations::Entity",
        from = "Column::AttestationId",
        to = "super::attestations::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Attestations,
    #[sea_orm(
        belongs_to = "super::teachers::Entity",
        from = "Column::ExaminersId",
        to = "super::teachers::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Teachers,
}

impl Related<super::attestations::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Attestations.def()
    }
}

impl Related<super::teachers::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Teachers.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
